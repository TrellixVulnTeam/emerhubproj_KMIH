{"remainingRequest":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Galib\\emrhb_test\\webapp\\src\\components\\HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\src\\components\\HelloWorld.vue","mtime":1599295819909},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogMCAxMHB4Owp9CmEgewogIGNvbG9yOiAjNDJiOTgzOwp9Cg=="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"app\">\n    <h3>New Employee</h3>\n    <div class=\"row\">\n    <form @submit.prevent=\"saveUser\" class=\"col s12\">\n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input type=\"text\" v-model=\"formdata.employee_id\" required>\n          <label>Employee ID#</label>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input type=\"text\" v-model=\"formdata.name\" required>\n          <label>Name</label>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input type=\"text\" v-model=\"formdata.dept\" required>\n          <label>Department</label>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input type=\"text\" v-model=\"formdata.position\" required>\n          <label>Name</label>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn\">Submit</button>\n      <router-link to=\"/\" class=\"btn grey\">Cancel</router-link>\n    </form>\n  </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { db } from '../firebase';\nconst docPath = 'users/userdata';\n\n@Component\nexport default class HelloWorld extends Vue {\n  private employee_id: number = 1\n  private name: string = \"\"\n  private dept: string = \"\"\n  private position: string = \"\"\n  private formdata = {}\n  private state: string=\"loading\"\n  private errorMsg: string=\"Error\"\n\n  public saveEmployee(): void {\n    db.collection('tom/tommy').add({\n    //db.collection(\"tom\").document(\"tommy\").add({\n      /*employee_id: this.employee_id,\n      name: this.name,\n      dept: this.dept,\n      position: this.position*/\n    })\n    /*.then(docRef => {\n        console.log('Details added: ', docRef.id)\n        this.$router.push('/')\n    })\n    .catch(error => {\n        console.error('Error adding details: ', error)\n    })*/\n  }\n\n  public async saveUser() {\n    try{\n      await db.doc(docPath).set(this.formdata);\n      this.state = 'synced';\n    } catch (error) {\n      this.errorMsg = JSON.stringify(error);\n      this.state = 'error';\n    }\n  }\n\n  /*public async function () {\n    const docRef = db.doc(docPath);\n    let data = (await docRef.get())\n    if(!data) {\n      data = { employee_id: 1;\n      name: ''; \n      dept: ''; \n      position: '';}\n    }\n    \n  }*/\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>"]}]}