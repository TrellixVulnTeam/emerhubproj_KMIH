{"remainingRequest":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\ts-loader\\index.js??ref--13-3!C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Galib\\emrhb_test\\webapp\\src\\components\\Userdata.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\src\\components\\Userdata.vue","mtime":1599483118433},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Galib\\emrhb_test\\webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Galib\\emrhb_test\\webapp\\src\\components\\Userdata.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { db } from '../firebase';\nimport { debounce } from 'debounce';\nconst docPath = 'users/userdata';\n\n@Component\nexport default class HelloWorld extends Vue {\n  private user_id: string = \"\"\n  private name: string = \"\"\n  private email: string = \"\"\n  private dept: string = \"\"\n  private position: string = \"\"\n  private formdata = {}\n  private state: string=\"loading\"\n  private errorMsg: string=\"Error\"\n  private points: number = 20\n  private storeData = {}\n  private submitted: boolean = false\n  private calcpoints: number = 0\n  private firebaseData= null\n\n  public firestore() {\n    return {\n      firebaseData: db.doc(docPath),\n    };\n  }\n\n  public async saveUser() {\n      await db.doc(docPath).set(\n        this.formdata).then(\n          docRef => {\n        this.state = 'synced';\n        this.storeData = this.formdata;\n\n        this.submitted = true;\n\n        const newObj = this.formdata\n        const arr: any[] = [];\n        Object.values(newObj).forEach(function(value) {\n          if (value != '') {\n            arr.push(value);\n          }\n        });\n        const values = arr.length;\n        const calculatedPoints = values*this.points;\n        this.calcpoints = calculatedPoints;\n        })\n        \n        .catch(error => {\n        console.error('Error adding details: ', error)\n        this.state = 'error';\n    })\n  }\n\n  public async prevData() {\n    const docRef = db.doc(docPath);\n    let data = (await docRef.get()).data();\n    if(!data){\n      data = { user_id: '', name: '', email: '', dept: '', position: ''}\n      docRef.set(data)\n    }\n    this.formdata = data;\n    this.storeData = { ...data };\n    this.state = 'synced';\n\n    const newObj = this.formdata\n    const arr: any[] = [];\n    Object.values(newObj).forEach(function(value) {\n      if (value != '') {\n        arr.push(value);\n      }\n    });\n    const values = arr.length;\n    const calculatedPoints = values*this.points;\n  }\n\n  /*public debounce<F extends (...params: any[]) => void>(fn: F, delay: number) {\n  let timeoutID: number = 1000;\n  return function(this: any, ...args: any[]) {\n    this.storeData = this.formdata;\n    this.saveUser;\n    clearTimeout(timeoutID);\n    timeoutID = window.setTimeout(() => fn.apply(this, args), delay);\n    } as F;\n  }*/\n\n  public debouncedChange = debounce(\n    this.saveUser\n    , 2000);\n\n  public async autosave() {\n    await db.doc(docPath).set(this.formdata).then(\n          docRef => {\n        this.state = 'autosaved';\n        this.storeData = this.formdata;\n    })\n  }\n\n  public dataUpdate() {\n    this.state = 'autosaved';\n    setTimeout(this.autosave, 2000)\n  }\n\n  public backToOriginal(){\n    this.state = 'revoked';\n    this.formdata = { ...this.storeData}\n  }\n\n  public close() {\n    this.submitted = false;\n    this.state = 'synced';\n  }\n\n  created() {\n    this.prevData();\n  }\n}\n"],"sourceRoot":""}]}